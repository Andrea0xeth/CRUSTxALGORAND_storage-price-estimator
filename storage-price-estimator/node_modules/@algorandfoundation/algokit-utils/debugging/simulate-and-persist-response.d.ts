import { SimulateAndPersistResponseParams } from '../types/debugging';
/**
 * This function simulates the atomic transactions using the provided `AtomicTransactionComposer` object and `Algodv2` object,
 * and persists the simulation response to an AlgoKit AVM Debugger compliant JSON file.
 *
 * @param param0 The parameters to control the simulation and persistence.
 *
 * @returns The simulation result, which includes various details about how the transactions would be processed.
 *
 * @example
 * const atc = new AtomicTransactionComposer();
 * const algod = new algosdk.Algodv2(token, server, port);
 * const projectRoot = '/path/to/project';
 * const bufferSizeMb = 10;
 *
 * const result = await simulateAndPersistResponse({ atc, projectRoot, algod, bufferSizeMb });
 * console.log(result);
 */
export declare function simulateAndPersistResponse({ atc, projectRoot, algod, bufferSizeMb }: SimulateAndPersistResponseParams): Promise<import("algosdk/dist/types/client/v2/algod/models/types").SimulateResponse>;
//# sourceMappingURL=simulate-and-persist-response.d.ts.map