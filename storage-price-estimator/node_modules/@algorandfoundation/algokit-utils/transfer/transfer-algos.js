'use strict';

var algosdk = require('algosdk');
var config = require('../config.js');
var transaction = require('../transaction/transaction.js');

/**
 * Transfer ALGOs between two accounts.
 * @param transfer The transfer definition
 * @param algod An algod client
 * @returns The transaction object and optionally the confirmation if it was sent to the chain (`skipSending` is `false` or unset)
 *
 * @example Usage example
 * ```typescript
 * await algokit.transferAlgos({ from, to, amount: algokit.algos(1) }, algod)
 * ```
 */
async function transferAlgos(transfer, algod) {
    const { from, to, amount, note, transactionParams, lease, ...sendParams } = transfer;
    const transaction$1 = algosdk.makePaymentTxnWithSuggestedParamsFromObject({
        from: transaction.getSenderAddress(from),
        to: transaction.getSenderAddress(to),
        amount: amount.microAlgos,
        note: transaction.encodeTransactionNote(note),
        suggestedParams: await transaction.getTransactionParams(transactionParams, algod),
        closeRemainderTo: undefined,
        rekeyTo: undefined,
    });
    const encodedLease = transaction.encodeLease(lease);
    if (encodedLease) {
        transaction$1.addLease(encodedLease);
    }
    if (!sendParams.skipSending) {
        config.Config.getLogger(sendParams.suppressLog).debug(`Transferring ${amount.microAlgos}ÂµALGOs from ${transaction.getSenderAddress(from)} to ${transaction.getSenderAddress(to)}`);
    }
    return transaction.sendTransaction({ transaction: transaction$1, from, sendParams }, algod);
}

exports.transferAlgos = transferAlgos;
//# sourceMappingURL=transfer-algos.js.map
